
/* autogenerated XMHF linker script */
/* author: amit vasudevan (amitvasudevan@acm.org) */
#include <xmhf.h>


OUTPUT_ARCH("i386")

MEMORY
{
  all (rwxai) : ORIGIN = 0x03200000, LENGTH = 0x1c200000
  unaccounted (rwxai) : ORIGIN = 0, LENGTH = 0 /* see section .unaccounted at end */
}
SECTIONS
{
	. = 0x03200000;

	.slab_geec_sentinel : {
		. = ALIGN(1);
		_objs_slab_geec_sentinel/geec_sentinel.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_geec_sentinel/geec_sentinel.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_geec_sentinel/geec_sentinel.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_geec_sentinel/geec_sentinel.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_geec_prime : {
		. = ALIGN(1);
		_objs_slab_geec_prime/geec_prime.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_geec_prime/geec_prime.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_geec_prime/geec_prime.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_geec_prime/geec_prime.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xc_init : {
		. = ALIGN(1);
		_objs_slab_xc_init/xc_init.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xc_init/xc_init.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xc_init/xc_init.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xc_init/xc_init.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xc_exhub : {
		. = ALIGN(1);
		_objs_slab_xc_exhub/xc_exhub.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xc_exhub/xc_exhub.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xc_exhub/xc_exhub.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xc_exhub/xc_exhub.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xc_ihub : {
		. = ALIGN(1);
		_objs_slab_xc_ihub/xc_ihub.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xc_ihub/xc_ihub.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xc_ihub/xc_ihub.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xc_ihub/xc_ihub.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xc_nwlog : {
		. = ALIGN(1);
		_objs_slab_xc_nwlog/xc_nwlog.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xc_nwlog/xc_nwlog.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xc_nwlog/xc_nwlog.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xc_nwlog/xc_nwlog.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_uapi_gcpustate : {
		. = ALIGN(1);
		_objs_slab_uapi_gcpustate/uapi_gcpustate.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_uapi_gcpustate/uapi_gcpustate.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_uapi_gcpustate/uapi_gcpustate.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_uapi_gcpustate/uapi_gcpustate.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_uapi_hcpustate : {
		. = ALIGN(1);
		_objs_slab_uapi_hcpustate/uapi_hcpustate.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_uapi_hcpustate/uapi_hcpustate.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_uapi_hcpustate/uapi_hcpustate.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_uapi_hcpustate/uapi_hcpustate.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_uapi_slabmempgtbl : {
		. = ALIGN(1);
		_objs_slab_uapi_slabmempgtbl/uapi_slabmempgtbl.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_uapi_slabmempgtbl/uapi_slabmempgtbl.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_uapi_slabmempgtbl/uapi_slabmempgtbl.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_uapi_slabmempgtbl/uapi_slabmempgtbl.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_uapi_sysdata : {
		. = ALIGN(1);
		_objs_slab_uapi_sysdata/uapi_sysdata.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_uapi_sysdata/uapi_sysdata.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_uapi_sysdata/uapi_sysdata.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_uapi_sysdata/uapi_sysdata.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xh_syscalllog : {
		. = ALIGN(1);
		_objs_slab_xh_syscalllog/xh_syscalllog.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xh_syscalllog/xh_syscalllog.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xh_syscalllog/xh_syscalllog.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xh_syscalllog/xh_syscalllog.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xh_hyperdep : {
		. = ALIGN(1);
		_objs_slab_xh_hyperdep/xh_hyperdep.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xh_hyperdep/xh_hyperdep.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xh_hyperdep/xh_hyperdep.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xh_hyperdep/xh_hyperdep.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000

	.slab_xh_ssteptrace : {
		. = ALIGN(1);
		_objs_slab_xh_ssteptrace/xh_ssteptrace.slo(.slabcode)
		. = ALIGN(1);
		_objs_slab_xh_ssteptrace/xh_ssteptrace.slo(.slabdata)
		. = ALIGN(1);
		_objs_slab_xh_ssteptrace/xh_ssteptrace.slo(.slabstack)
		. = ALIGN(1);
		_objs_slab_xh_ssteptrace/xh_ssteptrace.slo(.slabdmadata)
		. = ALIGN(1);
	} >all=0x0000


	/* this is to cause the link to fail if there is
	* anything we didn't explicitly place.
	* when this does cause link to fail, temporarily comment
	* this part out to see what sections end up in the output
	* which are not handled above, and handle them.
	*/
	.unaccounted : {
	*(*)
	} >unaccounted
}
